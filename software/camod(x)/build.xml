<project name="caMOD" default="clean-build-compile" basedir=".">
    
    <property file="localbuild.properties" />
        
    <property file="build.properties" />

    <!-- stage specific attributes -->
    <!--filter filtersfile="${tier}_camod.properties" /-->
    <filter token="db.host" value="${db.host}"/>
    <filter token="db.port" value="${db.port}"/>
    <filter token="db.username" value="${db.username}"/>
    <filter token="db.password" value="${db.password}"/>
    <filter token="db.dbname" value="${db.dbname}"/>

	<echo>Building for stage: ${tier}</echo>
	
    <!-- DEFAULT BUILD, does everything -->    
    <target name="clean-build-compile" depends="build_war" /> 
    
    <!--
    TARGET: COMPILE
        Compiles the source directory
    -->
	<!-- Classpath to compile the junit tests -->
	<path id="test.compile.classpath">
		<pathelement location="${build.classes.dir}" />
		<fileset dir="${source.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
    <target name="compile">
        <delete dir="${build.classes.dir}" />
        <mkdir dir="${build.classes.dir}" />
        <javac srcdir="${source.dir}" 
               destdir="${build.classes.dir}" 
               source="1.5" 
               debug="true" 
               debuglevel="lines,vars,source">
	         <classpath>
              <fileset dir="${source.lib.dir}">
                 <include name="*.jar"/>
               </fileset>
               <fileset dir="${source.nondeploy.lib.dir}">
                  <include name="*.jar"/>
                </fileset>
                <fileset dir="${source.nondeploy.lib.dir}">
                   <include name="*.jar"/>
                 </fileset>
                <fileset dir="${source.javamail.dir}">
                   <include name="*.jar"/>
                </fileset>	
         </classpath>
        </javac>
    </target>


    <!--
        TARGET: copy_resource_directory
        Copies all the bundle resources to the WEB-INF/classes/ folder
    -->
    <target name="copy_resource_directory" depends="compile">
        <copy todir="${build.classes.dir}" filtering="true" >
            <fileset dir="${source.dir}">                                
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <include name="*.dtd" />
                <include name="*.xsd" />
            </fileset>
        	<!-- fileset dir="${source.properties.dir}">
                <include name="**/*.properties" />        		
            </fileset -->        		
        </copy>
    </target>

 
    <!--
        TARGET: build_war
        This will build the war file
    -->
    <target name="build_war" depends="copy_resource_directory">
        <mkdir dir="${build.dir}/build"/>
        <delete file="${build.dir}/build/${app.war.name}.war" />
        <war destfile="${build.dir}/build/${app.war.name}.war" 
             webxml="${webapp.dir}/WEB-INF/web.xml">
            <fileset file="${webapp.dir}/*.*" />
            <zipfileset dir="${webapp.dir}/common" prefix="common" />
            <zipfileset dir="${webapp.dir}/images" prefix="images" />
            <zipfileset dir="${webapp.dir}/scripts" prefix="scripts" />
            <zipfileset dir="${webapp.dir}/styles" prefix="styles" />
            <zipfileset dir="${webapp.dir}/config" prefix="config" />
            <zipfileset dir="${webapp.dir}/WebHelp" prefix="WebHelp" />
            <zipfileset dir="${webapp.dir}/jsp" prefix="jsp" />
        	<zipfileset dir="${webapp.dir}/js" prefix="js" />
            <webinf dir="${webapp.dir}/WEB-INF"/>
            <classes dir="${build.classes.dir}" />
        </war>
    </target>
    
    <!-- Setup Hibernate Mappings -->

    <!-- import properties (app settings, classpath, jar file locations) -->
    <import file="properties.xml"/>
    

	
</project>
