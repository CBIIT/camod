<?xml version="1.0" encoding="utf-8" ?>

<!--L
   Copyright SAIC
   Copyright SAIC-Frederick

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/camod/LICENSE.txt for details.
L-->

<project name="camod" default="build:all" basedir=".">
	<description>
		This is the master build file for the caMOD project.  caMOD web application, caMOD grid service and caMOD API
	</description>
	
	<!-- Property file related properties and tasks -->
	<property name="build.dir" location="." />
	<property name="software.dir" location=".." />
	<property name="common.dir" location="${software.dir}/common" />
	<property name="target.dir" location="${software.dir}/target" />
	<property name="lib.dir" location="${target.dir}/lib" />
	<property name="log.dir" location="${target.dir}/logs" />
	<property name="dist.dir" location="${target.dir}/dist" />
	<property name="temp.dir" location="${target.dir}/temp" />
	<property name="download.dir" location="${target.dir}/download" />
	<property name="common.lib.dir" location="${software.dir}/common/resources/lib" />
	<property name="common.resources.dir" location="${software.dir}/common/resources" />
	
	<path id="common.lib.classpath">
		<fileset dir="${common.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath refid="common.lib.classpath" />
    	</taskdef>
	
	<!-- Paths -->
	<!-- The project.properties stores properties that are shared between both build.xml and deploy.xml. -->
	<property file="project.properties" />
	<if>
		<isset property="tier" />
		<then>
			<!-- if tier is defined, load tier specific properties for tier based installation -->
			<property file="${tier}.properties" />
			<echo message="loaded ${tier} tier properties." />
		</then>
		<else>
			<!-- load properties for non-tiered installation -->
			<property file="build.properties" />
		</else>
	</if>

	
	<!-- Properties that relate to how to call build targets from sub-projects-->
	<!-- Working directory passed to Ant tasks -->
	<property name="camod-webapp.base.dir" value="${software.dir}/camod" />
	<property name="camod-remote-api.base.dir" value="${software.dir}/grid_service" />
	<property name="camod-grid-service.base.dir" value="${software.dir}/grid_service" />
	
	<!-- Build file names relative working dir above, if the basedir of the sub-project ant script is ".." you should set the *.basdir to and the build file should include the dir and build file name from the *.base.dir -->
	<property name="camod-webapp.build.file" value="build.xml" />
	<property name="camod-remote-api.build.file" value="build.xml" />
	<property name="camod-grid-service.build.file" value="build.xml" />
	<property name="camod-webapp.static-analysis.build.file" value="static-analysis-build.xml" />
	
	<!-- The target name that should be called from the sub-project build file -->
	<property name="camod-webapp.build.target" value="build_resources" />
	<property name="camod-remote-api.build.target" value="copy-remote-api-war" />
	<property name="camod-grid-service.build.target" value="copy-grid-service" />
	<property name="camod-db.upgrade" value="upgrade-db" />

	<!-- Used by dist:*:prep to determin list of files to use for incremental build process.
		Directory and files must be in svn to work.
	-->
	<property name="db.src.dir" value="${camod-webapp.base.dir}/db" />
	<property name="db-install.src.dir" value="${db.src.dir}/db-install" />
	<property name="db-upgrade.src.dir" value="${db.src.dir}/db-upgrade" />

	<!-- Distribution Structure properties, used to copy files into the distribution area.
       		Use project.propertie relative dir names becasue they are used by install also-->
	<property name="dist.exploded.dir" value="${dist.dir}/exploded" />
	<property name="camod-webapp.dist.dir" value="${dist.exploded.dir}/${camod-webapp.dist.relative.dir}" />
	<property name="tools.dist.dir" value="${dist.exploded.dir}/${tools.dist.relative.dir}" />
	<property name="common.dist.dir" value="${dist.exploded.dir}/${common.dist.relative.dir}" />
	<property name="db-install.dist.dir" value="${dist.exploded.dir}/${db-install.dist.relative.dir}" />
	<property name="db-upgrade.dist.dir" value="${dist.exploded.dir}/${db-upgrade.dist.relative.dir}" />
	<property name="jboss-conf.dist.dir" value="${dist.exploded.dir}/${jboss-conf.dist.relative.dir}" />


	<target name="build:all" description="Builds all the sub projects, putting artifacts in the project level target directory, used by distribution targets to make distributions" depends="
		clean,
		init,
		build:camod-webapp,
		build:camod-api,
		build:camod-grid-service		
		" >
	</target>
	
	<target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${temp.dir}" />
	</target>

	<target name="init" depends="clean" description="Sets up build are and initalizes variables">
		<mkdir dir="${target.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.exploded.dir}" />
		<mkdir dir="${camod-webapp.dist.dir}" />
		<mkdir dir="${common.dist.dir}" />
		<mkdir dir="${tools.dist.dir}" />
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${download.dir}" />
		
		<copy file="${common.resources.dir}/jboss-conf/oracle-ds.xml" todir="${common.dist.dir}">
    	  	  <filterset>
		    <filter token="database.user" value="${database.user}"/>
		    <filter token="database.password" value="${database.password}"/>
		    <filter token="database.url" value="${database.url}"/>
    	  	    <filter token="database.driver" value="${database.driver}"/>
		  </filterset>
		</copy>
	</target>

	<target name="build:camod-webapp" depends="init" description="Call webapp sub-projects build target to produce artifiacts">
		<!-- setting the property in the ant call overrides the property in the sub-project allowing the artifact to be produced where needed -->
		<ant inheritAll="false" inheritRefs="false" antfile="${camod-webapp.build.file}" target="${camod-webapp.build.target}" dir="${camod-webapp.base.dir}">
			<property name="dist.dir" value="${camod-webapp.dist.dir}" />
			<property name="common.resources.dir" value="${common.resources.dir}" />
			<property name="caimage.host" value="${caimage.host}" />
			<property name="caimage.modelview.uri" value="${caimage.modelview.uri}" />
			<property name="caimage.genconview.uri" value="${caimage.genconview.uri}" />
			<property name="evs.uri" value="${evs.uri}" />
			<property name="user.registration.email" value="${user.registration.email}" />
			<property name="mail.smtp.server" value="${mail.smtp.server}" />
			<property name="ldap.url" value="${ldap.url}" />
			<property name="ldap.basedn" value="${ldap.basedn}" />
		</ant>
	</target>
	
	<target name="build:camod-api" depends="init" description="Call grid_service sub-projects build target to produce artifacts">
		<ant inheritAll="false" inheritRefs="false" antfile="${camod-remote-api.build.file}"
			target="${camod-remote-api.build.target}"
			dir="${camod-remote-api.base.dir}" >
		</ant>
	</target>
	
	<target name="build:camod-grid-service" depends="init" description="Call grid_service sub-projects build target to produce artifacts">
		<ant inheritAll="false" inheritRefs="false" antfile="${camod-grid-service.build.file}"
			target="${camod-grid-service.build.target}"
			dir="${camod-grid-service.base.dir}" >
		</ant>
	</target>
	
	<target name="build:camod-grid-api" depends="build:camod-api, build:camod-grid-service" description="Call Grid Service and API targets">
	</target>
	
	<target name="deploy:camod-webapp" depends="build:camod-webapp">
	    	<copy file="${camod-webapp.dist.dir}/camod.war" todir="${jboss.deploy.dir}" overwrite="true"/>
    	</target>
	
	<target name="update:camod-db">
		<ant inheritAll="false" inheritRefs="false" antfile="${camod-webapp.build.file}" target="${camod-db.upgrade}" dir="${camod-webapp.base.dir}">
			<property name="database.server" value="${database.server}" />
			<property name="database.port" value="${database.port}" />
			<property name="database.user" value="${database.user}" />
			<property name="database.password" value="${database.password}" />
			<property name="database.name" value="${database.name}" />
			<property name="database.url" value="${database.url}" />
			<property name="database.driver" value="${database.driver}" />
		</ant>
	</target>

</project>
